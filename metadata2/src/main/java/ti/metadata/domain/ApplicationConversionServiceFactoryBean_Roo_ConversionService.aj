// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ti.metadata.domain;

import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import ti.metadata.domain.ApplicationConversionServiceFactoryBean;
import ti.metadata.domain.bom.Bom;
import ti.metadata.domain.bom.BomAltHeader;
import ti.metadata.domain.bom.BomAltItem;
import ti.metadata.domain.interchange.IInterchangeLog;
import ti.metadata.domain.interchange.InterchangeHeader;
import ti.metadata.domain.interchange.InterchangeItem;
import ti.metadata.domain.other.Manfr;
import ti.metadata.domain.other.TurboModel;
import ti.metadata.domain.part.Backplate;
import ti.metadata.domain.part.BearingHousing;
import ti.metadata.domain.part.BearingSpacer;
import ti.metadata.domain.part.Cartridge;
import ti.metadata.domain.part.CompressorWheel;
import ti.metadata.domain.part.Gasket;
import ti.metadata.domain.part.Heatshield;
import ti.metadata.domain.part.JournalBearing;
import ti.metadata.domain.part.Kit;
import ti.metadata.domain.part.NozzleRing;
import ti.metadata.domain.part.Part;
import ti.metadata.domain.part.PistonRing;
import ti.metadata.domain.part.StandardBearingSpacer;
import ti.metadata.domain.part.StandardBearingSpacerPK;
import ti.metadata.domain.part.StandardJournalBearing;
import ti.metadata.domain.part.StandardJournalBearingPK;
import ti.metadata.domain.part.TurbineWheel;
import ti.metadata.domain.part.Turbo;
import ti.metadata.domain.security.Group;
import ti.metadata.domain.security.GroupRole;
import ti.metadata.domain.security.GroupRolePK;
import ti.metadata.domain.security.Role;
import ti.metadata.domain.security.User;
import ti.metadata.domain.security.UserGroup;
import ti.metadata.domain.security.UserGroupPK;
import ti.metadata.domain.type.CoolType;
import ti.metadata.domain.type.GasketType;
import ti.metadata.domain.type.KitType;
import ti.metadata.domain.type.ManfrType;
import ti.metadata.domain.type.PartType;
import ti.metadata.domain.type.SealType;
import ti.metadata.domain.type.TurboType;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Bom, String> ApplicationConversionServiceFactoryBean.getBomToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.bom.Bom, java.lang.String>() {
            public String convert(Bom bom) {
                return new StringBuilder().append(bom.getQuantity()).toString();
            }
        };
    }
    
    public Converter<Long, Bom> ApplicationConversionServiceFactoryBean.getIdToBomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.bom.Bom>() {
            public ti.metadata.domain.bom.Bom convert(java.lang.Long id) {
                return Bom.findBom(id);
            }
        };
    }
    
    public Converter<String, Bom> ApplicationConversionServiceFactoryBean.getStringToBomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.bom.Bom>() {
            public ti.metadata.domain.bom.Bom convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Bom.class);
            }
        };
    }
    
    public Converter<BomAltHeader, String> ApplicationConversionServiceFactoryBean.getBomAltHeaderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.bom.BomAltHeader, java.lang.String>() {
            public String convert(BomAltHeader bomAltHeader) {
                return new StringBuilder().append(bomAltHeader.getName()).append(' ').append(bomAltHeader.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, BomAltHeader> ApplicationConversionServiceFactoryBean.getIdToBomAltHeaderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.bom.BomAltHeader>() {
            public ti.metadata.domain.bom.BomAltHeader convert(java.lang.Long id) {
                return BomAltHeader.findBomAltHeader(id);
            }
        };
    }
    
    public Converter<String, BomAltHeader> ApplicationConversionServiceFactoryBean.getStringToBomAltHeaderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.bom.BomAltHeader>() {
            public ti.metadata.domain.bom.BomAltHeader convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BomAltHeader.class);
            }
        };
    }
    
    public Converter<BomAltItem, String> ApplicationConversionServiceFactoryBean.getBomAltItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.bom.BomAltItem, java.lang.String>() {
            public String convert(BomAltItem bomAltItem) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, BomAltItem> ApplicationConversionServiceFactoryBean.getIdToBomAltItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.bom.BomAltItem>() {
            public ti.metadata.domain.bom.BomAltItem convert(java.lang.Long id) {
                return BomAltItem.findBomAltItem(id);
            }
        };
    }
    
    public Converter<String, BomAltItem> ApplicationConversionServiceFactoryBean.getStringToBomAltItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.bom.BomAltItem>() {
            public ti.metadata.domain.bom.BomAltItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BomAltItem.class);
            }
        };
    }
    
    public Converter<IInterchangeLog, String> ApplicationConversionServiceFactoryBean.getIInterchangeLogToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.interchange.IInterchangeLog, java.lang.String>() {
            public String convert(IInterchangeLog iInterchangeLog) {
                return new StringBuilder().append(iInterchangeLog.getDescription()).append(' ').append(iInterchangeLog.getPartNumId()).append(' ').append(iInterchangeLog.getInterchangeHeaderId()).append(' ').append(iInterchangeLog.getInterchangeCntUniq()).toString();
            }
        };
    }
    
    public Converter<Long, IInterchangeLog> ApplicationConversionServiceFactoryBean.getIdToIInterchangeLogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.interchange.IInterchangeLog>() {
            public ti.metadata.domain.interchange.IInterchangeLog convert(java.lang.Long id) {
                return IInterchangeLog.findIInterchangeLog(id);
            }
        };
    }
    
    public Converter<String, IInterchangeLog> ApplicationConversionServiceFactoryBean.getStringToIInterchangeLogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.interchange.IInterchangeLog>() {
            public ti.metadata.domain.interchange.IInterchangeLog convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), IInterchangeLog.class);
            }
        };
    }
    
    public Converter<InterchangeHeader, String> ApplicationConversionServiceFactoryBean.getInterchangeHeaderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.interchange.InterchangeHeader, java.lang.String>() {
            public String convert(InterchangeHeader interchangeHeader) {
                return new StringBuilder().append(interchangeHeader.getName()).append(' ').append(interchangeHeader.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, InterchangeHeader> ApplicationConversionServiceFactoryBean.getIdToInterchangeHeaderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.interchange.InterchangeHeader>() {
            public ti.metadata.domain.interchange.InterchangeHeader convert(java.lang.Long id) {
                return InterchangeHeader.findInterchangeHeader(id);
            }
        };
    }
    
    public Converter<String, InterchangeHeader> ApplicationConversionServiceFactoryBean.getStringToInterchangeHeaderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.interchange.InterchangeHeader>() {
            public ti.metadata.domain.interchange.InterchangeHeader convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), InterchangeHeader.class);
            }
        };
    }
    
    public Converter<InterchangeItem, String> ApplicationConversionServiceFactoryBean.getInterchangeItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.interchange.InterchangeItem, java.lang.String>() {
            public String convert(InterchangeItem interchangeItem) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, InterchangeItem> ApplicationConversionServiceFactoryBean.getIdToInterchangeItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.interchange.InterchangeItem>() {
            public ti.metadata.domain.interchange.InterchangeItem convert(java.lang.Long id) {
                return InterchangeItem.findInterchangeItem(id);
            }
        };
    }
    
    public Converter<String, InterchangeItem> ApplicationConversionServiceFactoryBean.getStringToInterchangeItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.interchange.InterchangeItem>() {
            public ti.metadata.domain.interchange.InterchangeItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), InterchangeItem.class);
            }
        };
    }
    
    public Converter<Manfr, String> ApplicationConversionServiceFactoryBean.getManfrToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.other.Manfr, java.lang.String>() {
            public String convert(Manfr manfr) {
                return new StringBuilder().append(manfr.getName()).append(' ').append(manfr.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, Manfr> ApplicationConversionServiceFactoryBean.getIdToManfrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.other.Manfr>() {
            public ti.metadata.domain.other.Manfr convert(java.lang.Long id) {
                return Manfr.findManfr(id);
            }
        };
    }
    
    public Converter<String, Manfr> ApplicationConversionServiceFactoryBean.getStringToManfrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.other.Manfr>() {
            public ti.metadata.domain.other.Manfr convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Manfr.class);
            }
        };
    }
    
    public Converter<TurboModel, String> ApplicationConversionServiceFactoryBean.getTurboModelToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.other.TurboModel, java.lang.String>() {
            public String convert(TurboModel turboModel) {
                return new StringBuilder().append(turboModel.getName()).append(' ').append(turboModel.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, TurboModel> ApplicationConversionServiceFactoryBean.getIdToTurboModelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.other.TurboModel>() {
            public ti.metadata.domain.other.TurboModel convert(java.lang.Long id) {
                return TurboModel.findTurboModel(id);
            }
        };
    }
    
    public Converter<String, TurboModel> ApplicationConversionServiceFactoryBean.getStringToTurboModelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.other.TurboModel>() {
            public ti.metadata.domain.other.TurboModel convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TurboModel.class);
            }
        };
    }
    
    public Converter<Backplate, String> ApplicationConversionServiceFactoryBean.getBackplateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Backplate, java.lang.String>() {
            public String convert(Backplate backplate) {
                return new StringBuilder().append(backplate.getSealTypeId()).append(' ').append(backplate.getStyleCompressorWheel()).append(' ').append(backplate.getSealType()).append(' ').append(backplate.getOverallDiameter()).toString();
            }
        };
    }
    
    public Converter<Long, Backplate> ApplicationConversionServiceFactoryBean.getIdToBackplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Backplate>() {
            public ti.metadata.domain.part.Backplate convert(java.lang.Long id) {
                return Backplate.findBackplate(id);
            }
        };
    }
    
    public Converter<String, Backplate> ApplicationConversionServiceFactoryBean.getStringToBackplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Backplate>() {
            public ti.metadata.domain.part.Backplate convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Backplate.class);
            }
        };
    }
    
    public Converter<BearingHousing, String> ApplicationConversionServiceFactoryBean.getBearingHousingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.BearingHousing, java.lang.String>() {
            public String convert(BearingHousing bearingHousing) {
                return new StringBuilder().append(bearingHousing.getCoolTypeId()).append(' ').append(bearingHousing.getOilInlet()).append(' ').append(bearingHousing.getOilOutlet()).append(' ').append(bearingHousing.getOil()).toString();
            }
        };
    }
    
    public Converter<Long, BearingHousing> ApplicationConversionServiceFactoryBean.getIdToBearingHousingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.BearingHousing>() {
            public ti.metadata.domain.part.BearingHousing convert(java.lang.Long id) {
                return BearingHousing.findBearingHousing(id);
            }
        };
    }
    
    public Converter<String, BearingHousing> ApplicationConversionServiceFactoryBean.getStringToBearingHousingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.BearingHousing>() {
            public ti.metadata.domain.part.BearingHousing convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BearingHousing.class);
            }
        };
    }
    
    public Converter<BearingSpacer, String> ApplicationConversionServiceFactoryBean.getBearingSpacerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.BearingSpacer, java.lang.String>() {
            public String convert(BearingSpacer bearingSpacer) {
                return new StringBuilder().append(bearingSpacer.getOutsideDimMin()).append(' ').append(bearingSpacer.getOutsideDimMax()).append(' ').append(bearingSpacer.getInsideDimMin()).append(' ').append(bearingSpacer.getInsideDimMax()).toString();
            }
        };
    }
    
    public Converter<Long, BearingSpacer> ApplicationConversionServiceFactoryBean.getIdToBearingSpacerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.BearingSpacer>() {
            public ti.metadata.domain.part.BearingSpacer convert(java.lang.Long id) {
                return BearingSpacer.findBearingSpacer(id);
            }
        };
    }
    
    public Converter<String, BearingSpacer> ApplicationConversionServiceFactoryBean.getStringToBearingSpacerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.BearingSpacer>() {
            public ti.metadata.domain.part.BearingSpacer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BearingSpacer.class);
            }
        };
    }
    
    public Converter<Cartridge, String> ApplicationConversionServiceFactoryBean.getCartridgeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Cartridge, java.lang.String>() {
            public String convert(Cartridge cartridge) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Cartridge> ApplicationConversionServiceFactoryBean.getIdToCartridgeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Cartridge>() {
            public ti.metadata.domain.part.Cartridge convert(java.lang.Long id) {
                return Cartridge.findCartridge(id);
            }
        };
    }
    
    public Converter<String, Cartridge> ApplicationConversionServiceFactoryBean.getStringToCartridgeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Cartridge>() {
            public ti.metadata.domain.part.Cartridge convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Cartridge.class);
            }
        };
    }
    
    public Converter<CompressorWheel, String> ApplicationConversionServiceFactoryBean.getCompressorWheelToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.CompressorWheel, java.lang.String>() {
            public String convert(CompressorWheel compressorWheel) {
                return new StringBuilder().append(compressorWheel.getInducerOa()).append(' ').append(compressorWheel.getTipHeightB()).append(' ').append(compressorWheel.getExducerOc()).append(' ').append(compressorWheel.getHubLengthD()).toString();
            }
        };
    }
    
    public Converter<Long, CompressorWheel> ApplicationConversionServiceFactoryBean.getIdToCompressorWheelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.CompressorWheel>() {
            public ti.metadata.domain.part.CompressorWheel convert(java.lang.Long id) {
                return CompressorWheel.findCompressorWheel(id);
            }
        };
    }
    
    public Converter<String, CompressorWheel> ApplicationConversionServiceFactoryBean.getStringToCompressorWheelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.CompressorWheel>() {
            public ti.metadata.domain.part.CompressorWheel convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CompressorWheel.class);
            }
        };
    }
    
    public Converter<Gasket, String> ApplicationConversionServiceFactoryBean.getGasketToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Gasket, java.lang.String>() {
            public String convert(Gasket gasket) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Gasket> ApplicationConversionServiceFactoryBean.getIdToGasketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Gasket>() {
            public ti.metadata.domain.part.Gasket convert(java.lang.Long id) {
                return Gasket.findGasket(id);
            }
        };
    }
    
    public Converter<String, Gasket> ApplicationConversionServiceFactoryBean.getStringToGasketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Gasket>() {
            public ti.metadata.domain.part.Gasket convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Gasket.class);
            }
        };
    }
    
    public Converter<Heatshield, String> ApplicationConversionServiceFactoryBean.getHeatshieldToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Heatshield, java.lang.String>() {
            public String convert(Heatshield heatshield) {
                return new StringBuilder().append(heatshield.getOverallDiameter()).append(' ').append(heatshield.getInsideDiameter()).append(' ').append(heatshield.getInducerDiameter()).append(' ').append(heatshield.getNotes()).toString();
            }
        };
    }
    
    public Converter<Long, Heatshield> ApplicationConversionServiceFactoryBean.getIdToHeatshieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Heatshield>() {
            public ti.metadata.domain.part.Heatshield convert(java.lang.Long id) {
                return Heatshield.findHeatshield(id);
            }
        };
    }
    
    public Converter<String, Heatshield> ApplicationConversionServiceFactoryBean.getStringToHeatshieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Heatshield>() {
            public ti.metadata.domain.part.Heatshield convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Heatshield.class);
            }
        };
    }
    
    public Converter<JournalBearing, String> ApplicationConversionServiceFactoryBean.getJournalBearingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.JournalBearing, java.lang.String>() {
            public String convert(JournalBearing journalBearing) {
                return new StringBuilder().append(journalBearing.getOutsideDimMin()).append(' ').append(journalBearing.getOutsideDimMax()).append(' ').append(journalBearing.getInsideDimMin()).append(' ').append(journalBearing.getInsideDimMax()).toString();
            }
        };
    }
    
    public Converter<Long, JournalBearing> ApplicationConversionServiceFactoryBean.getIdToJournalBearingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.JournalBearing>() {
            public ti.metadata.domain.part.JournalBearing convert(java.lang.Long id) {
                return JournalBearing.findJournalBearing(id);
            }
        };
    }
    
    public Converter<String, JournalBearing> ApplicationConversionServiceFactoryBean.getStringToJournalBearingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.JournalBearing>() {
            public ti.metadata.domain.part.JournalBearing convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), JournalBearing.class);
            }
        };
    }
    
    public Converter<Kit, String> ApplicationConversionServiceFactoryBean.getKitToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Kit, java.lang.String>() {
            public String convert(Kit kit) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Kit> ApplicationConversionServiceFactoryBean.getIdToKitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Kit>() {
            public ti.metadata.domain.part.Kit convert(java.lang.Long id) {
                return Kit.findKit(id);
            }
        };
    }
    
    public Converter<String, Kit> ApplicationConversionServiceFactoryBean.getStringToKitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Kit>() {
            public ti.metadata.domain.part.Kit convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Kit.class);
            }
        };
    }
    
    public Converter<NozzleRing, String> ApplicationConversionServiceFactoryBean.getNozzleRingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.NozzleRing, java.lang.String>() {
            public String convert(NozzleRing nozzleRing) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, NozzleRing> ApplicationConversionServiceFactoryBean.getIdToNozzleRingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.NozzleRing>() {
            public ti.metadata.domain.part.NozzleRing convert(java.lang.Long id) {
                return NozzleRing.findNozzleRing(id);
            }
        };
    }
    
    public Converter<String, NozzleRing> ApplicationConversionServiceFactoryBean.getStringToNozzleRingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.NozzleRing>() {
            public ti.metadata.domain.part.NozzleRing convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NozzleRing.class);
            }
        };
    }
    
    public Converter<Part, String> ApplicationConversionServiceFactoryBean.getPartToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Part, java.lang.String>() {
            public String convert(Part part) {
                return new StringBuilder().append(part.getManfrPartNum()).append(' ').append(part.getName()).append(' ').append(part.getDescription()).append(' ').append(part.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, Part> ApplicationConversionServiceFactoryBean.getIdToPartConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Part>() {
            public ti.metadata.domain.part.Part convert(java.lang.Long id) {
                return Part.findPart(id);
            }
        };
    }
    
    public Converter<String, Part> ApplicationConversionServiceFactoryBean.getStringToPartConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Part>() {
            public ti.metadata.domain.part.Part convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Part.class);
            }
        };
    }
    
    public Converter<PistonRing, String> ApplicationConversionServiceFactoryBean.getPistonRingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.PistonRing, java.lang.String>() {
            public String convert(PistonRing pistonRing) {
                return new StringBuilder().append(pistonRing.getOutsideDimMin()).append(' ').append(pistonRing.getOutsideDimMax()).append(' ').append(pistonRing.getWidthMin()).append(' ').append(pistonRing.getWidthMax()).toString();
            }
        };
    }
    
    public Converter<Long, PistonRing> ApplicationConversionServiceFactoryBean.getIdToPistonRingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.PistonRing>() {
            public ti.metadata.domain.part.PistonRing convert(java.lang.Long id) {
                return PistonRing.findPistonRing(id);
            }
        };
    }
    
    public Converter<String, PistonRing> ApplicationConversionServiceFactoryBean.getStringToPistonRingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.PistonRing>() {
            public ti.metadata.domain.part.PistonRing convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PistonRing.class);
            }
        };
    }
    
    public Converter<StandardBearingSpacer, String> ApplicationConversionServiceFactoryBean.getStandardBearingSpacerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardBearingSpacer, java.lang.String>() {
            public String convert(StandardBearingSpacer standardBearingSpacer) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<StandardBearingSpacerPK, StandardBearingSpacer> ApplicationConversionServiceFactoryBean.getIdToStandardBearingSpacerConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardBearingSpacerPK, ti.metadata.domain.part.StandardBearingSpacer>() {
            public ti.metadata.domain.part.StandardBearingSpacer convert(ti.metadata.domain.part.StandardBearingSpacerPK id) {
                return StandardBearingSpacer.findStandardBearingSpacer(id);
            }
        };
    }
    
    public Converter<String, StandardBearingSpacer> ApplicationConversionServiceFactoryBean.getStringToStandardBearingSpacerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.StandardBearingSpacer>() {
            public ti.metadata.domain.part.StandardBearingSpacer convert(String id) {
                return getObject().convert(getObject().convert(id, StandardBearingSpacerPK.class), StandardBearingSpacer.class);
            }
        };
    }
    
    public Converter<StandardJournalBearing, String> ApplicationConversionServiceFactoryBean.getStandardJournalBearingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardJournalBearing, java.lang.String>() {
            public String convert(StandardJournalBearing standardJournalBearing) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<StandardJournalBearingPK, StandardJournalBearing> ApplicationConversionServiceFactoryBean.getIdToStandardJournalBearingConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardJournalBearingPK, ti.metadata.domain.part.StandardJournalBearing>() {
            public ti.metadata.domain.part.StandardJournalBearing convert(ti.metadata.domain.part.StandardJournalBearingPK id) {
                return StandardJournalBearing.findStandardJournalBearing(id);
            }
        };
    }
    
    public Converter<String, StandardJournalBearing> ApplicationConversionServiceFactoryBean.getStringToStandardJournalBearingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.StandardJournalBearing>() {
            public ti.metadata.domain.part.StandardJournalBearing convert(String id) {
                return getObject().convert(getObject().convert(id, StandardJournalBearingPK.class), StandardJournalBearing.class);
            }
        };
    }
    
    public Converter<TurbineWheel, String> ApplicationConversionServiceFactoryBean.getTurbineWheelToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.TurbineWheel, java.lang.String>() {
            public String convert(TurbineWheel turbineWheel) {
                return new StringBuilder().append(turbineWheel.getExduceOa()).append(' ').append(turbineWheel.getTipHeightB()).append(' ').append(turbineWheel.getInducerOc()).append(' ').append(turbineWheel.getJournalOd()).toString();
            }
        };
    }
    
    public Converter<Long, TurbineWheel> ApplicationConversionServiceFactoryBean.getIdToTurbineWheelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.TurbineWheel>() {
            public ti.metadata.domain.part.TurbineWheel convert(java.lang.Long id) {
                return TurbineWheel.findTurbineWheel(id);
            }
        };
    }
    
    public Converter<String, TurbineWheel> ApplicationConversionServiceFactoryBean.getStringToTurbineWheelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.TurbineWheel>() {
            public ti.metadata.domain.part.TurbineWheel convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TurbineWheel.class);
            }
        };
    }
    
    public Converter<Turbo, String> ApplicationConversionServiceFactoryBean.getTurboToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.Turbo, java.lang.String>() {
            public String convert(Turbo turbo) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Turbo> ApplicationConversionServiceFactoryBean.getIdToTurboConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.part.Turbo>() {
            public ti.metadata.domain.part.Turbo convert(java.lang.Long id) {
                return Turbo.findTurbo(id);
            }
        };
    }
    
    public Converter<String, Turbo> ApplicationConversionServiceFactoryBean.getStringToTurboConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.Turbo>() {
            public ti.metadata.domain.part.Turbo convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Turbo.class);
            }
        };
    }
    
    public Converter<Group, String> ApplicationConversionServiceFactoryBean.getGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.Group, java.lang.String>() {
            public String convert(Group group) {
                return new StringBuilder().append(group.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Group> ApplicationConversionServiceFactoryBean.getIdToGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.security.Group>() {
            public ti.metadata.domain.security.Group convert(java.lang.Long id) {
                return Group.findGroup(id);
            }
        };
    }
    
    public Converter<String, Group> ApplicationConversionServiceFactoryBean.getStringToGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.Group>() {
            public ti.metadata.domain.security.Group convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Group.class);
            }
        };
    }
    
    public Converter<GroupRole, String> ApplicationConversionServiceFactoryBean.getGroupRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.GroupRole, java.lang.String>() {
            public String convert(GroupRole groupRole) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<GroupRolePK, GroupRole> ApplicationConversionServiceFactoryBean.getIdToGroupRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.GroupRolePK, ti.metadata.domain.security.GroupRole>() {
            public ti.metadata.domain.security.GroupRole convert(ti.metadata.domain.security.GroupRolePK id) {
                return GroupRole.findGroupRole(id);
            }
        };
    }
    
    public Converter<String, GroupRole> ApplicationConversionServiceFactoryBean.getStringToGroupRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.GroupRole>() {
            public ti.metadata.domain.security.GroupRole convert(String id) {
                return getObject().convert(getObject().convert(id, GroupRolePK.class), GroupRole.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getName()).append(' ').append(role.getDisplay()).toString();
            }
        };
    }
    
    public Converter<Long, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.security.Role>() {
            public ti.metadata.domain.security.Role convert(java.lang.Long id) {
                return Role.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.Role>() {
            public ti.metadata.domain.security.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Role.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getName()).append(' ').append(user.getEmail()).append(' ').append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.security.User>() {
            public ti.metadata.domain.security.User convert(java.lang.Long id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.User>() {
            public ti.metadata.domain.security.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public Converter<UserGroup, String> ApplicationConversionServiceFactoryBean.getUserGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.UserGroup, java.lang.String>() {
            public String convert(UserGroup userGroup) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<UserGroupPK, UserGroup> ApplicationConversionServiceFactoryBean.getIdToUserGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.UserGroupPK, ti.metadata.domain.security.UserGroup>() {
            public ti.metadata.domain.security.UserGroup convert(ti.metadata.domain.security.UserGroupPK id) {
                return UserGroup.findUserGroup(id);
            }
        };
    }
    
    public Converter<String, UserGroup> ApplicationConversionServiceFactoryBean.getStringToUserGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.UserGroup>() {
            public ti.metadata.domain.security.UserGroup convert(String id) {
                return getObject().convert(getObject().convert(id, UserGroupPK.class), UserGroup.class);
            }
        };
    }
    
    public Converter<CoolType, String> ApplicationConversionServiceFactoryBean.getCoolTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.CoolType, java.lang.String>() {
            public String convert(CoolType coolType) {
                return new StringBuilder().append(coolType.getName()).append(' ').append(coolType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, CoolType> ApplicationConversionServiceFactoryBean.getIdToCoolTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.CoolType>() {
            public ti.metadata.domain.type.CoolType convert(java.lang.Long id) {
                return CoolType.findCoolType(id);
            }
        };
    }
    
    public Converter<String, CoolType> ApplicationConversionServiceFactoryBean.getStringToCoolTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.CoolType>() {
            public ti.metadata.domain.type.CoolType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CoolType.class);
            }
        };
    }
    
    public Converter<GasketType, String> ApplicationConversionServiceFactoryBean.getGasketTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.GasketType, java.lang.String>() {
            public String convert(GasketType gasketType) {
                return new StringBuilder().append(gasketType.getName()).append(' ').append(gasketType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, GasketType> ApplicationConversionServiceFactoryBean.getIdToGasketTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.GasketType>() {
            public ti.metadata.domain.type.GasketType convert(java.lang.Long id) {
                return GasketType.findGasketType(id);
            }
        };
    }
    
    public Converter<String, GasketType> ApplicationConversionServiceFactoryBean.getStringToGasketTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.GasketType>() {
            public ti.metadata.domain.type.GasketType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GasketType.class);
            }
        };
    }
    
    public Converter<KitType, String> ApplicationConversionServiceFactoryBean.getKitTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.KitType, java.lang.String>() {
            public String convert(KitType kitType) {
                return new StringBuilder().append(kitType.getName()).append(' ').append(kitType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, KitType> ApplicationConversionServiceFactoryBean.getIdToKitTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.KitType>() {
            public ti.metadata.domain.type.KitType convert(java.lang.Long id) {
                return KitType.findKitType(id);
            }
        };
    }
    
    public Converter<String, KitType> ApplicationConversionServiceFactoryBean.getStringToKitTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.KitType>() {
            public ti.metadata.domain.type.KitType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), KitType.class);
            }
        };
    }
    
    public Converter<ManfrType, String> ApplicationConversionServiceFactoryBean.getManfrTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.ManfrType, java.lang.String>() {
            public String convert(ManfrType manfrType) {
                return new StringBuilder().append(manfrType.getName()).toString();
            }
        };
    }
    
    public Converter<Long, ManfrType> ApplicationConversionServiceFactoryBean.getIdToManfrTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.ManfrType>() {
            public ti.metadata.domain.type.ManfrType convert(java.lang.Long id) {
                return ManfrType.findManfrType(id);
            }
        };
    }
    
    public Converter<String, ManfrType> ApplicationConversionServiceFactoryBean.getStringToManfrTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.ManfrType>() {
            public ti.metadata.domain.type.ManfrType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ManfrType.class);
            }
        };
    }
    
    public Converter<PartType, String> ApplicationConversionServiceFactoryBean.getPartTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.PartType, java.lang.String>() {
            public String convert(PartType partType) {
                return new StringBuilder().append(partType.getName()).append(' ').append(partType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, PartType> ApplicationConversionServiceFactoryBean.getIdToPartTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.PartType>() {
            public ti.metadata.domain.type.PartType convert(java.lang.Long id) {
                return PartType.findPartType(id);
            }
        };
    }
    
    public Converter<String, PartType> ApplicationConversionServiceFactoryBean.getStringToPartTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.PartType>() {
            public ti.metadata.domain.type.PartType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PartType.class);
            }
        };
    }
    
    public Converter<SealType, String> ApplicationConversionServiceFactoryBean.getSealTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.SealType, java.lang.String>() {
            public String convert(SealType sealType) {
                return new StringBuilder().append(sealType.getName()).append(' ').append(sealType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, SealType> ApplicationConversionServiceFactoryBean.getIdToSealTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.SealType>() {
            public ti.metadata.domain.type.SealType convert(java.lang.Long id) {
                return SealType.findSealType(id);
            }
        };
    }
    
    public Converter<String, SealType> ApplicationConversionServiceFactoryBean.getStringToSealTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.SealType>() {
            public ti.metadata.domain.type.SealType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SealType.class);
            }
        };
    }
    
    public Converter<TurboType, String> ApplicationConversionServiceFactoryBean.getTurboTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.type.TurboType, java.lang.String>() {
            public String convert(TurboType turboType) {
                return new StringBuilder().append(turboType.getName()).append(' ').append(turboType.getImportPk()).toString();
            }
        };
    }
    
    public Converter<Long, TurboType> ApplicationConversionServiceFactoryBean.getIdToTurboTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ti.metadata.domain.type.TurboType>() {
            public ti.metadata.domain.type.TurboType convert(java.lang.Long id) {
                return TurboType.findTurboType(id);
            }
        };
    }
    
    public Converter<String, TurboType> ApplicationConversionServiceFactoryBean.getStringToTurboTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.type.TurboType>() {
            public ti.metadata.domain.type.TurboType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TurboType.class);
            }
        };
    }
    
    public Converter<String, StandardJournalBearingPK> ApplicationConversionServiceFactoryBean.getJsonToStandardJournalBearingPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.StandardJournalBearingPK>() {
            public StandardJournalBearingPK convert(String encodedJson) {
                return StandardJournalBearingPK.fromJsonToStandardJournalBearingPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StandardJournalBearingPK, String> ApplicationConversionServiceFactoryBean.getStandardJournalBearingPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardJournalBearingPK, java.lang.String>() {
            public String convert(StandardJournalBearingPK standardJournalBearingPK) {
                return Base64.encodeBase64URLSafeString(standardJournalBearingPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, UserGroupPK> ApplicationConversionServiceFactoryBean.getJsonToUserGroupPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.UserGroupPK>() {
            public UserGroupPK convert(String encodedJson) {
                return UserGroupPK.fromJsonToUserGroupPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<UserGroupPK, String> ApplicationConversionServiceFactoryBean.getUserGroupPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.UserGroupPK, java.lang.String>() {
            public String convert(UserGroupPK userGroupPK) {
                return Base64.encodeBase64URLSafeString(userGroupPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, GroupRolePK> ApplicationConversionServiceFactoryBean.getJsonToGroupRolePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.security.GroupRolePK>() {
            public GroupRolePK convert(String encodedJson) {
                return GroupRolePK.fromJsonToGroupRolePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<GroupRolePK, String> ApplicationConversionServiceFactoryBean.getGroupRolePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.security.GroupRolePK, java.lang.String>() {
            public String convert(GroupRolePK groupRolePK) {
                return Base64.encodeBase64URLSafeString(groupRolePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StandardBearingSpacerPK> ApplicationConversionServiceFactoryBean.getJsonToStandardBearingSpacerPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ti.metadata.domain.part.StandardBearingSpacerPK>() {
            public StandardBearingSpacerPK convert(String encodedJson) {
                return StandardBearingSpacerPK.fromJsonToStandardBearingSpacerPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StandardBearingSpacerPK, String> ApplicationConversionServiceFactoryBean.getStandardBearingSpacerPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ti.metadata.domain.part.StandardBearingSpacerPK, java.lang.String>() {
            public String convert(StandardBearingSpacerPK standardBearingSpacerPK) {
                return Base64.encodeBase64URLSafeString(standardBearingSpacerPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBomToStringConverter());
        registry.addConverter(getIdToBomConverter());
        registry.addConverter(getStringToBomConverter());
        registry.addConverter(getBomAltHeaderToStringConverter());
        registry.addConverter(getIdToBomAltHeaderConverter());
        registry.addConverter(getStringToBomAltHeaderConverter());
        registry.addConverter(getBomAltItemToStringConverter());
        registry.addConverter(getIdToBomAltItemConverter());
        registry.addConverter(getStringToBomAltItemConverter());
        registry.addConverter(getIInterchangeLogToStringConverter());
        registry.addConverter(getIdToIInterchangeLogConverter());
        registry.addConverter(getStringToIInterchangeLogConverter());
        registry.addConverter(getInterchangeHeaderToStringConverter());
        registry.addConverter(getIdToInterchangeHeaderConverter());
        registry.addConverter(getStringToInterchangeHeaderConverter());
        registry.addConverter(getInterchangeItemToStringConverter());
        registry.addConverter(getIdToInterchangeItemConverter());
        registry.addConverter(getStringToInterchangeItemConverter());
        registry.addConverter(getManfrToStringConverter());
        registry.addConverter(getIdToManfrConverter());
        registry.addConverter(getStringToManfrConverter());
        registry.addConverter(getTurboModelToStringConverter());
        registry.addConverter(getIdToTurboModelConverter());
        registry.addConverter(getStringToTurboModelConverter());
        registry.addConverter(getBackplateToStringConverter());
        registry.addConverter(getIdToBackplateConverter());
        registry.addConverter(getStringToBackplateConverter());
        registry.addConverter(getBearingHousingToStringConverter());
        registry.addConverter(getIdToBearingHousingConverter());
        registry.addConverter(getStringToBearingHousingConverter());
        registry.addConverter(getBearingSpacerToStringConverter());
        registry.addConverter(getIdToBearingSpacerConverter());
        registry.addConverter(getStringToBearingSpacerConverter());
        registry.addConverter(getCartridgeToStringConverter());
        registry.addConverter(getIdToCartridgeConverter());
        registry.addConverter(getStringToCartridgeConverter());
        registry.addConverter(getCompressorWheelToStringConverter());
        registry.addConverter(getIdToCompressorWheelConverter());
        registry.addConverter(getStringToCompressorWheelConverter());
        registry.addConverter(getGasketToStringConverter());
        registry.addConverter(getIdToGasketConverter());
        registry.addConverter(getStringToGasketConverter());
        registry.addConverter(getHeatshieldToStringConverter());
        registry.addConverter(getIdToHeatshieldConverter());
        registry.addConverter(getStringToHeatshieldConverter());
        registry.addConverter(getJournalBearingToStringConverter());
        registry.addConverter(getIdToJournalBearingConverter());
        registry.addConverter(getStringToJournalBearingConverter());
        registry.addConverter(getKitToStringConverter());
        registry.addConverter(getIdToKitConverter());
        registry.addConverter(getStringToKitConverter());
        registry.addConverter(getNozzleRingToStringConverter());
        registry.addConverter(getIdToNozzleRingConverter());
        registry.addConverter(getStringToNozzleRingConverter());
        registry.addConverter(getPartToStringConverter());
        registry.addConverter(getIdToPartConverter());
        registry.addConverter(getStringToPartConverter());
        registry.addConverter(getPistonRingToStringConverter());
        registry.addConverter(getIdToPistonRingConverter());
        registry.addConverter(getStringToPistonRingConverter());
        registry.addConverter(getStandardBearingSpacerToStringConverter());
        registry.addConverter(getIdToStandardBearingSpacerConverter());
        registry.addConverter(getStringToStandardBearingSpacerConverter());
        registry.addConverter(getStandardJournalBearingToStringConverter());
        registry.addConverter(getIdToStandardJournalBearingConverter());
        registry.addConverter(getStringToStandardJournalBearingConverter());
        registry.addConverter(getTurbineWheelToStringConverter());
        registry.addConverter(getIdToTurbineWheelConverter());
        registry.addConverter(getStringToTurbineWheelConverter());
        registry.addConverter(getTurboToStringConverter());
        registry.addConverter(getIdToTurboConverter());
        registry.addConverter(getStringToTurboConverter());
        registry.addConverter(getGroupToStringConverter());
        registry.addConverter(getIdToGroupConverter());
        registry.addConverter(getStringToGroupConverter());
        registry.addConverter(getGroupRoleToStringConverter());
        registry.addConverter(getIdToGroupRoleConverter());
        registry.addConverter(getStringToGroupRoleConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserGroupToStringConverter());
        registry.addConverter(getIdToUserGroupConverter());
        registry.addConverter(getStringToUserGroupConverter());
        registry.addConverter(getCoolTypeToStringConverter());
        registry.addConverter(getIdToCoolTypeConverter());
        registry.addConverter(getStringToCoolTypeConverter());
        registry.addConverter(getGasketTypeToStringConverter());
        registry.addConverter(getIdToGasketTypeConverter());
        registry.addConverter(getStringToGasketTypeConverter());
        registry.addConverter(getKitTypeToStringConverter());
        registry.addConverter(getIdToKitTypeConverter());
        registry.addConverter(getStringToKitTypeConverter());
        registry.addConverter(getManfrTypeToStringConverter());
        registry.addConverter(getIdToManfrTypeConverter());
        registry.addConverter(getStringToManfrTypeConverter());
        registry.addConverter(getPartTypeToStringConverter());
        registry.addConverter(getIdToPartTypeConverter());
        registry.addConverter(getStringToPartTypeConverter());
        registry.addConverter(getSealTypeToStringConverter());
        registry.addConverter(getIdToSealTypeConverter());
        registry.addConverter(getStringToSealTypeConverter());
        registry.addConverter(getTurboTypeToStringConverter());
        registry.addConverter(getIdToTurboTypeConverter());
        registry.addConverter(getStringToTurboTypeConverter());
        registry.addConverter(getJsonToStandardJournalBearingPKConverter());
        registry.addConverter(getStandardJournalBearingPKToJsonConverter());
        registry.addConverter(getJsonToUserGroupPKConverter());
        registry.addConverter(getUserGroupPKToJsonConverter());
        registry.addConverter(getJsonToGroupRolePKConverter());
        registry.addConverter(getGroupRolePKToJsonConverter());
        registry.addConverter(getJsonToStandardBearingSpacerPKConverter());
        registry.addConverter(getStandardBearingSpacerPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
